@model Product.Model.ProductModel


@{
    ViewBag.Title = "AddProduct";
}

<!--top banner-->
<div id="banner" class="py-5">
    <div class="container">
        <div class="row">
            <div class="col-md-8 col-lg-6">
                <div class="banner-title">
                    <h1 class="title">Enter Product Detail Here</h1>
                    <p class="lead">You need to enter product details for listing your product on our website..</p>
                </div>
            </div>
        </div>
    </div>
</div>
<br />
<br />


<!--Add new product form-->
<div class="container">
    <form id="formAddProduct" enctype="multipart/form-data">
        <div class="form-horizontal">

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Brand, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Brand, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Brand, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ModelNo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ModelNo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ModelNo, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Category, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Condition, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Condition, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Condition, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.BuyNowPrice, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.BuyNowPrice, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.BuyNowPrice, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.BidPrice, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.BidPrice, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.BidPrice, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.BidDateTime, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.BidDateTime, new { htmlAttributes = new { @class = "form-control datetimepicker" } })
                    @Html.ValidationMessageFor(model => model.BidDateTime, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Address.AddressLine1, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Address.AddressLine1, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Address.AddressLine1, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Address.AddressLine2, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Address.AddressLine2, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Address.AddressLine2, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Address.City, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Address.City, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Address.City, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Address.State, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Address.State, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Address.State, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Address.Country, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Address.Country, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Address.Country, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group"> <!--Saving image-->
                <div class="col-md-8">
                    <label>Image</label>
                    <input type="hidden" id="ImagePath" name="ImagePath" />
                    <input class="form-control" id="btnImageUpload" name="ImageFile" type="file" accept=".png, .jpg" />
                </div>
                <div  class="col-md-4">
                    <div class="thumb">
                        <img class="img-thumbnail img-fluid" id="productImage" />
                    </div>
                </div>        
            </div>
            
            <div class="form-group" style="display:none;">
                @Html.LabelFor(model => model.AddedByUserId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.AddedByUserId, new { htmlAttributes = new { @class = "form-control", @Value = @Session["CurrentUserId"] } })
                    @Html.ValidationMessageFor(model => model.AddedByUserId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    @*<input type="submit" value="Create" class="btn btn-primary" />*@
                    <button type="button" id="btnAddProduct" class="btn btn-primary"> Create</button>
                </div>
            </div>
        </div>
    </form>  
     
    @if (ViewBag.AddProductConfirmation != null)
    {
        <script type="text/javascript">

            window.onload = function () {
                alert("@ViewBag.AddProductConfirmation");
            };

        </script>

    }
    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</div>

<script type="text/javascript">
    
    $("#btnImageUpload").change(function () { // save image into database

        var element = this; // current element 
		var formData = new FormData(); // create new form data instance
		var totalFiles = element.files.length; // if multiple image save then save count of total images

		for (var i = 0; i < totalFiles; i++) {
			var file = element.files[i];
			formData.append("Photo", file);
		}

		$.ajax({
			type: 'POST',
			url: '@Url.Action("UploadImage", "Shared")', // send data into url
			dataType: 'json', // type of data sending
			data: formData, // data
			contentType: false,
			processData: false
		})
        .done(function (response) { // if done ajax call
        	//console.log(response);
        	if(response.Success)
        	{
        		$("#ImagePath").val(response.ImagePath);  // save image path into Image path inpout box from response
        		$("#productImage").attr("src", response.ImagePath); // show uploaded image
        	}
        })
        .fail(function (XMLHttpRequest, textStatus, errorThrown) { // if fail ajax call
        	alert("FAIL");
        });
	});

    $("#btnAddProduct").click(function () { // select add button
   
        $.ajax({
            type: 'POST',
            url: '/Product/AddProduct',
            data: $("#formAddProduct").serialize() // send form data into c# method
        })
            .done(function (response) {
                alert("Record Added");
                $("#formAddProduct").empty();
                window.location = "/Home/Index";
            })
            .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                alert("Fail");
            });
    });
</script>
