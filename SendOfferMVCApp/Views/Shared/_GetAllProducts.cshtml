@model IEnumerable<Product.Model.ProductModel>

@{
    Layout = null;
}

<div class="container mt-5">
    <div class="row" id="test1">
        @foreach (var item in Model)
        {

            <div class="col-4 mb-5  w-100 hover-shadow">
                <div class="card" style="width:18rem;">
                    <img src="@Url.Content(item.ImagePath)" class="card-img-top" alt="card image" />
                    <div class="card-body">
                        <h5>@item.Name</h5>
                        <span class="productId" style="display:none">@item.Id</span>
                        <div class="font-weight-normal" style="font-size:13px;">
                            <label class="text-muted mb-0">Pickup Location: </label> @item.AddressLine1 @item.City @item.State @item.Country
                        </div>
                        <div class="font-weight-normal" style="font-size:13px;">
                            <label class="text-muted mb-0 mt-1">Time Remaining: </label>
                            <span class="expiry-date" style="display:none;"> @item.BidDateTime</span>
                            <span class="remain-time"></span>
                        </div>
                        <hr />
                        <div class="align-content-center">
                            <span style="font-size:25px;font-weight:600" class="text-muted">$@item.BidPrice</span>
                            <button type="submit" class="btn btn-primary btn-sm float-right mt-2">Bid</button>
                        </div>
                        <span class="text-muted">Bid Price</span>
                        <div>
                            <span style="font-size:25px;font-weight:600" class="text-muted">$@item.BuyNowPrice</span>

                            <button type="button" value="Bid" class="btn btn-primary btn-sm float-right mt-2">Buy Now</button>

                        </div>

                        <span class="text-muted">Buy Now Price</span>
                        <div>
                            <span style="font-size:25px;font-weight:600" class="text-muted">Send Offer</span>
                            <div>
                                <button type="button" class="btn btn-primary btn-sm float-right mt-n4 btnSendOffer" data-toggle="modal" data-target="#offerCard">Offer</button>

                            </div>
                            <span class="itemId" style="display:none">@item.Id</span>
                            <div id="testDiv-@item.Id" style="border:1px solid black;display:none">
                                testing div
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>

</div>



<style>
    /*.modal {
            position: absolute;
            left: 255px;
            top: 30px;
            overflow: auto;
            overflow-y: auto;
        }
    */
    .btn {
        /*width: 80px;
            height: 27px;*/
        border-radius: 0;
    }

    .bgSeagreen {
        background-color: #e74c3c;
    }

    .txtSeagreen {
        color: #e74c3c;
    }
</style>



<script src="~/Scripts/jquery-3.5.1.js"></script>
<script src="~/Scripts/popper.js"></script>
<script src="~/Scripts/bootstrap.js"></script>

<script type="text/javascript">

    function getRemainingTime() {
        var expiryDate = document.getElementsByClassName('expiry-date'); //retrive remaing date
        for (var i = 0; i < expiryDate.length; i++) { //loop of length = 2
            var itemExpireDate = expiryDate[i].textContent;
            //console.log('date', itemExpireDate);
            var bidEndDate = new Date(itemExpireDate); // format full date into
            var day = bidEndDate.getDate(); // get day month year hours min sec seprate for needfull format
            var month = bidEndDate.getMonth() + 1;
            var year = bidEndDate.getFullYear();
            var hours = bidEndDate.getHours();
            var min = bidEndDate.getMinutes();
            var sec = bidEndDate.getSeconds();
            var dateValue = year + "-" + month + "-" + day + " " + hours + ":" + min + ":" + sec; // final format
            var date = Math.abs((new Date().getTime() / 1000).toFixed(0)); // get current date in miliseconds
            var date2 = Math.abs((new Date(dateValue).getTime() / 1000).toFixed(0)); // get expiry date in miliseconds
            var diff = date2 - date; // get differece
            var days = Math.floor(diff / 86400); // get days months seconds hours min sec
            var hours = Math.floor(diff / 3600) % 24;
            var minutes = Math.floor(diff / 60) % 60;
            var seconds = diff % 60;
            var daysStr = days;
            if (days < 10) {
                daysStr = "0" + days;  // if date is single character add 0 for formatting similar all
            }
            var hoursStr = hours;
            if (hours < 10) {
                hoursStr = "0" + hours;
            }
            var minutesStr = minutes;
            if (minutes < 10) {
                minutesStr = "0" + minutes;
            }
            var secondsStr = seconds;
            if (seconds < 10) {
                secondsStr = "0" + seconds;
            }
            if (days < 0 && hours < 0 && minutes < 0 && seconds < 0) {
                daysStr = "00";
                hoursStr = "00";
                minutesStr = "00";
                secondsStr = "00";
                if (typeof interval != "undefined") {
                    clearInterval(interval);
                }
            }
            var dateOut = daysStr + " days " + hoursStr + " hours " + minutesStr + " mintues " + secondsStr + " seconds"; // show data in view
            //console.log('dateOut', dateOut); //ok report
            var finalDate = document.getElementsByClassName("remain-time")[i];
            finalDate.textContent = dateOut;
            //console.log('xx', finalDate);
        }
    }
    getRemainingTime();// call
    var interval = setInterval(getRemainingTime, 1000); // set interval for call auto function

    $('.btnSendOffer').on('click', function () {
        var itemId = $('.itemId');
        //console.log(itemId);
        for (i = 0; i < itemId.length; i++) {
            //console.log(itemId.length);
            var cItem = this.textContent;
            var test = cItem[i];
            console.log("cItem" + test);
            //alert("hello" + cItem);

        }
        

        //$(".testDiv").show();
        
        
    });

    $("#searchBtn").click(function () { // select element by id
        var searchVal = $("#searchTxt").val();

        $.ajax({ // start ajax function
            url: '/Product/ProductTable', // path for which action method wants to call
            data: {
                search: searchVal  // put any data from current view
            }
        })
            .done(function (response) { // if task is completed then this piece of code runs
                $("#tableCont").html(response);
            })
            .fail(function (XMLHttpRequest, textStatus, errorThrown) { // if task is failed then this piece of code runs
                alert("Fail");
            });
    });
</script>
